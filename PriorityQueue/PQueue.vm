function PQueue.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
call Vector.new 0
pop this 0
push this 0
push constant 3
call Vector.ReSize 2
pop temp 0
push this 0
push argument 0
call Vector.PushBack 2
pop temp 0
push this 0
push argument 0
call Vector.PushBack 2
pop temp 0
push constant 1
pop this 1
push pointer 0
return
function PQueue.Enqueue 5
push argument 0
pop pointer 0
push constant 0
not
pop local 4
push argument 1
pop local 1
push this 0
push local 1
call Vector.PushBack 2
pop temp 0
push this 1
push constant 1
add
pop this 1
push this 1
pop local 2
label WHILE_EXP0
push local 4
not
if-goto WHILE_END0
push local 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 4
goto IF_END0
label IF_FALSE0
push this 0
push local 2
push constant 2
call Math.divide 2
call Vector.Get 2
pop local 3
push local 1
push local 3
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 4
goto IF_END1
label IF_FALSE1
push this 0
push local 2
push constant 2
call Math.divide 2
push local 1
call Vector.Set 3
pop temp 0
push this 0
push local 2
push local 3
call Vector.Set 3
pop temp 0
push local 2
push constant 2
call Math.divide 2
pop local 2
label IF_END1
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function PQueue.Dequeue 3
push argument 0
pop pointer 0
push constant 0
not
pop local 2
push constant 1
pop local 1
push this 1
pop local 0
push this 0
push constant 1
push this 0
push local 0
call Vector.Get 2
call Vector.Set 3
pop temp 0
label WHILE_EXP0
push local 2
not
if-goto WHILE_END0
push local 1
push constant 2
call Math.multiply 2
push this 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 2
goto IF_END0
label IF_FALSE0
push local 1
push constant 2
call Math.multiply 2
push constant 1
add
push this 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 0
push local 1
call Vector.Get 2
push this 0
push local 1
push constant 2
call Math.multiply 2
call Vector.Get 2
call PQueue.leq 3
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push local 1
push local 1
push constant 2
call Math.multiply 2
call Vector.Swap 3
pop temp 0
push local 1
push constant 2
call Math.multiply 2
pop local 1
goto IF_END2
label IF_FALSE2
push constant 0
pop local 2
label IF_END2
goto IF_END1
label IF_FALSE1
push pointer 0
push this 0
push local 1
push constant 2
call Math.multiply 2
call Vector.Get 2
push this 0
push local 1
push constant 2
call Math.multiply 2
push constant 1
add
call Vector.Get 2
call PQueue.leq 3
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push this 0
push local 1
call Vector.Get 2
push this 0
push local 1
push constant 2
call Math.multiply 2
push constant 1
add
call Vector.Get 2
call PQueue.leq 3
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push local 1
push local 1
push constant 2
call Math.multiply 2
push constant 1
add
call Vector.Swap 3
pop temp 0
push local 1
push constant 2
call Math.multiply 2
push constant 1
add
pop local 1
goto IF_END4
label IF_FALSE4
push constant 0
pop local 2
label IF_END4
goto IF_END3
label IF_FALSE3
push pointer 0
push this 0
push local 1
call Vector.Get 2
push this 0
push local 1
push constant 2
call Math.multiply 2
call Vector.Get 2
call PQueue.leq 3
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 0
push local 1
push local 1
push constant 2
call Math.multiply 2
call Vector.Swap 3
pop temp 0
push local 1
push constant 2
call Math.multiply 2
pop local 1
goto IF_END5
label IF_FALSE5
push constant 0
pop local 2
label IF_END5
label IF_END3
label IF_END1
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Vector.PopBack 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push constant 0
return
function PQueue.Peek 1
push argument 0
pop pointer 0
push this 1
push constant 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push constant 1
call Vector.Get 2
pop local 0
push local 0
return
function PQueue.GetCapacity 0
push argument 0
pop pointer 0
push this 1
return
function PQueue.GetStruct 0
push argument 0
pop pointer 0
push this 0
return
function PQueue.Dispose 0
push argument 0
pop pointer 0
push this 0
call Vector.Dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function PQueue.leq 0
push argument 0
pop pointer 0
push argument 1
push argument 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
