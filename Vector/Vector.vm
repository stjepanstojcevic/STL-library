function Vector.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 1
pop this 0
push constant 0
pop this 1
push this 0
call Array.new 1
pop this 2
push pointer 0
return
function Vector.ReSize 4
push argument 0
pop pointer 0
push constant 1
pop local 0
push pointer 0
push local 0
push argument 1
call Vector.leq 3
pop local 3
label WHILE_EXP0
push local 3
not
if-goto WHILE_END0
push local 0
push constant 2
call Math.multiply 2
pop local 0
push pointer 0
push local 0
push argument 1
call Vector.leq 3
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 0
pop this 0
push this 0
call Array.new 1
pop local 2
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push local 1
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 2
pop this 2
push constant 0
return
function Vector.Get 0
push argument 0
pop pointer 0
push argument 1
push this 2
add
pop pointer 1
push that 0
return
function Vector.Set 0
push argument 0
pop pointer 0
push argument 1
push this 2
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Vector.PushBack 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
push this 1
push this 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 0
call Vector.ReSize 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Vector.Dispose 0
push argument 0
pop pointer 0
push this 2
call Array.Dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Vector.GetSize 0
push argument 0
pop pointer 0
push this 0
return
function Vector.GetCapacity 0
push argument 0
pop pointer 0
push this 1
return
function Vector.leq 0
push argument 0
pop pointer 0
push argument 1
push argument 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push argument 1
push argument 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
goto IF_END1
label IF_FALSE1
push constant 0
return
label IF_END1
label IF_END0
