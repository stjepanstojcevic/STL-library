function BST.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 0
not
call Node.new 2
pop this 0
push constant 1
pop this 1
push pointer 0
return
function BST.Insert 4
push argument 0
pop pointer 0
push argument 1
push constant 0
call Node.new 2
pop local 2
push constant 0
not
pop local 3
push this 0
pop local 0
push pointer 0
call BST.Empty 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 0
not
call Node.new 2
pop this 0
push constant 0
return
label IF_FALSE0
label WHILE_EXP0
push local 3
not
if-goto WHILE_END0
push local 0
call Node.GetValue 1
push argument 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Node.LeftChildExists 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
call Node.GetLeftChild 1
pop local 0
goto IF_END2
label IF_FALSE2
push local 0
push local 2
call Node.SetLeft 2
pop temp 0
push local 0
call Node.GetLeftChild 1
pop local 1
push local 1
push local 0
call Node.SetParent 2
pop temp 0
push this 1
push constant 1
add
pop this 1
push constant 0
pop local 3
label IF_END2
goto IF_END1
label IF_FALSE1
push local 0
call Node.RightChildExists 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
call Node.GetRightChild 1
pop local 0
goto IF_END3
label IF_FALSE3
push local 0
push local 2
call Node.SetRight 2
pop temp 0
push local 0
call Node.GetRightChild 1
pop local 1
push local 1
push local 0
call Node.SetParent 2
pop temp 0
push this 1
push constant 1
add
pop this 1
push constant 0
pop local 3
label IF_END3
label IF_END1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BST.Search 3
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
not
pop local 2
push this 0
pop local 0
push pointer 0
call BST.Empty 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 17
call String.new 1
push constant 83
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 122
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 1
return
label IF_FALSE0
label WHILE_EXP0
push local 2
not
if-goto WHILE_END0
push local 0
call Node.GetValue 1
push argument 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Node.LeftChildExists 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
call Node.GetLeftChild 1
pop local 0
goto IF_END2
label IF_FALSE2
push constant 0
pop local 2
push constant 22
call String.new 1
push constant 78
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
label IF_END2
goto IF_END1
label IF_FALSE1
push local 0
call Node.GetValue 1
push argument 1
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
call Node.RightChildExists 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
call Node.GetRightChild 1
pop local 0
goto IF_END4
label IF_FALSE4
push constant 0
pop local 2
push constant 22
call String.new 1
push constant 78
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
label IF_END4
goto IF_END3
label IF_FALSE3
push constant 0
pop local 2
push local 0
pop local 1
label IF_END3
label IF_END1
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function BST.Delete 7
push argument 0
pop pointer 0
push pointer 0
push argument 1
call BST.Search 2
pop local 0
push local 0
call Node.LeftChildExists 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Node.RightChildExists 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Node.GetParent 1
pop local 2
push local 2
call Node.GetLeftChild 1
pop local 5
push local 5
call Node.GetValue 1
push local 0
call Node.GetValue 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
call Node.RemoveLeft 1
pop temp 0
goto IF_END2
label IF_FALSE2
push local 2
call Node.RemoveRight 1
pop temp 0
label IF_END2
push this 1
push constant 1
sub
pop this 1
push local 0
call Node.Dispose 1
pop temp 0
push constant 0
return
label IF_FALSE1
label IF_FALSE0
push local 0
call Node.LeftChildExists 1
push constant 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
call Node.IsRoot 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
call Node.GetRightChild 1
pop this 0
push this 0
call Node.SetRoot 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push local 0
call Node.Dispose 1
pop temp 0
push constant 0
return
goto IF_END4
label IF_FALSE4
push local 0
call Node.GetParent 1
pop local 2
push local 0
call Node.GetRightChild 1
pop local 3
push local 2
call Node.GetLeftChild 1
pop local 5
push local 5
call Node.GetValue 1
push local 0
call Node.GetValue 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 2
push local 3
call Node.SetLeft 2
pop temp 0
push local 3
push local 2
call Node.SetParent 2
pop temp 0
goto IF_END5
label IF_FALSE5
push local 2
push local 3
call Node.SetRight 2
pop temp 0
push local 3
push local 2
call Node.SetParent 2
pop temp 0
label IF_END5
push this 1
push constant 1
sub
pop this 1
push local 0
call Node.Dispose 1
pop temp 0
push constant 0
return
label IF_END4
label IF_FALSE3
push local 0
call Node.RightChildExists 1
push constant 0
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
call Node.IsRoot 1
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
call Node.GetLeftChild 1
pop this 0
push this 0
call Node.SetRoot 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push local 0
call Node.Dispose 1
pop temp 0
push constant 0
return
goto IF_END7
label IF_FALSE7
push local 0
call Node.GetParent 1
pop local 2
push local 0
call Node.GetLeftChild 1
pop local 4
push local 2
call Node.GetLeftChild 1
pop local 5
push local 5
call Node.GetValue 1
push local 0
call Node.GetValue 1
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 2
push local 4
call Node.SetLeft 2
pop temp 0
push local 4
push local 2
call Node.SetParent 2
pop temp 0
goto IF_END8
label IF_FALSE8
push local 2
push local 4
call Node.SetRight 2
pop temp 0
push local 4
push local 2
call Node.SetParent 2
pop temp 0
label IF_END8
push this 1
push constant 1
sub
pop this 1
push local 0
call Node.Dispose 1
pop temp 0
push constant 0
return
label IF_END7
label IF_FALSE6
push pointer 0
push local 0
call Node.GetRightChild 1
call BST.InorderSuccessor 2
pop local 1
push local 1
call Node.GetParent 1
pop local 2
push local 1
call Node.RightChildExists 1
push constant 0
not
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 2
push local 1
call Node.GetRightChild 1
call Node.SetRight 2
pop temp 0
push local 1
call Node.GetRightChild 1
pop local 3
push local 3
push local 2
call Node.SetParent 2
pop temp 0
goto IF_END9
label IF_FALSE9
push local 2
call Node.RemoveRight 1
pop temp 0
label IF_END9
push local 1
call Node.GetValue 1
pop local 6
push local 0
push local 6
call Node.SetValue 2
pop temp 0
push this 1
push constant 1
sub
pop this 1
push local 1
call Node.Dispose 1
pop temp 0
push constant 0
return
function BST.GetRoot 0
push argument 0
pop pointer 0
push this 0
return
function BST.InorderSuccessor 0
push argument 0
pop pointer 0
push argument 1
call Node.LeftChildExists 1
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
call Node.GetLeftChild 1
call BST.InorderSuccessor 2
return
label IF_FALSE0
push argument 1
return
function BST.Empty 0
push argument 0
pop pointer 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function BST.GetCapacity 0
push argument 0
pop pointer 0
push this 1
return
function BST.Dispose 1
push argument 0
pop pointer 0
push argument 1
pop local 0
push local 0
call Node.LeftChildExists 1
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
call Node.GetLeftChild 1
call BST.Dispose 2
pop temp 0
label IF_FALSE0
push local 0
call Node.RightChildExists 1
push constant 0
not
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 0
call Node.GetRightChild 1
call BST.Dispose 2
pop temp 0
label IF_FALSE1
push constant 12
call String.new 1
push constant 86
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
call Node.Dispose 1
pop temp 0
push constant 0
return
function BST.InorderPrint 1
push argument 0
pop local 0
push local 0
call Node.LeftChildExists 1
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Node.GetLeftChild 1
call BST.InorderPrint 1
pop temp 0
label IF_FALSE0
push local 0
call Node.GetValue 1
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 0
call Node.RightChildExists 1
push constant 0
not
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Node.GetRightChild 1
call BST.InorderPrint 1
pop temp 0
label IF_FALSE1
push constant 0
return
